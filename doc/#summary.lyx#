#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize 12
\spacing onehalf
\use_hyperref true
\pdf_title "Analysis of tractable cases in Probabilistic Argumentation Frameworks"
\pdf_author "Luca Bruno"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Indice
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\begin_inset VSpace 1in
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename 197_unical.jpg
	width 60col%

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
\align center

\size largest
FACOLTÀ DI INGEGNERIA
\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
\align center

\size largest
Corso di Laurea Magistrale in Ingegneria Informatica
\end_layout

\begin_layout Standard
\begin_inset VSpace 1in
\end_inset


\end_layout

\begin_layout Standard
\align center

\size largest
THESIS SUMMARY
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
\size larger
Analysis and implementation of tractable cases in Probabilistic Argumentation
 Frameworks
\end_layout

\begin_layout Standard
\begin_inset VSpace 1.5in
\end_inset


\end_layout

\begin_layout Standard

\size larger
RELATORI
\begin_inset space \hfill{}
\end_inset

CANDIDATO
\end_layout

\begin_layout Standard

\size larger
Prof.
 Sergio FLESCA
\begin_inset space \hfill{}
\end_inset

Luca BRUNO
\end_layout

\begin_layout Standard

\size larger
Ing.
 xx XX
\begin_inset space \hfill{}
\end_inset

Matr.
 145994
\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100line%"
height "1pt"

\end_inset


\begin_inset Newline newline
\end_inset


\size larger
Anno Accademico 2012-2013
\size default

\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Goals of this work
\end_layout

\begin_layout Standard
The purpose of this work is to study argumentation frameworks and its variants,
 in particular probabilistic argumentation frameworks (
\emph on
PrAF
\emph default
).
 Then we analyze an existing approach based on Monte Carlo simulation to
 compute the probability that a set of arguments is an extension for a given
 PrAF according to some semantics.
\end_layout

\begin_layout Standard
It will be shown that for some properties this probability can be computed
 in polynomial time.
\end_layout

\begin_layout Standard
Based on these tractable cases, we will extend the existing Monte Carlo
 approach to optimize harder cases.
 We will show that the new algorithm is generally more efficient compared
 to the naive algorithm, and especially efficient for the complete semantics.
\end_layout

\begin_layout Subsection
Why argumentation frameworks
\end_layout

\begin_layout Standard
The purpose of argumentation is to search for the requirements that make
 an argument correct by examining the errors of reasoning we make when we
 try to use arguments.
 The task of evaluation is to determine whether an argument is weak or strong
 by general criteria that can be applied to it.
 
\end_layout

\begin_layout Standard
There is no strong agreement in the literature of argumentation theory on
 how to define an argument.
 Some definitions are more minimal while others are more inclusive.
 A minimal definition is the following: an 
\emph on
argument
\emph default
 is a set of statements (propositions), made up of a conclusion, a set of
 premises, and an inference from the premises to the conclusion.
 An argument can be supported by other arguments, or it can be attacked
 by other arguments.
\end_layout

\begin_layout Standard
The general approach or methodology of argumentation is different than the
 traditional deductive approach.
 The deductive logic concentrated on a single inference, where the premises
 and conclusion are designated in advance, and applied formal models like
 propositional calculus and quantification theory to determine whether the
 conclusion follows from the premises.
 In contrast, the argumentation approach looks at two sides of an argument,
 the pro and the contra, to examine how arguments interact with each other.
 By this process of examining one argument against the other, the weaknesses
 in each argument are revealed, and it is shown which of the two arguments
 is the stronger.
 
\end_layout

\begin_layout Section
Argumentation frameworks
\end_layout

\begin_layout Subsection
Abstract argumentation frameworks
\end_layout

\begin_layout Standard
Dung's abstract argumentation frameworks (AAFs) 
\begin_inset CommandInset citation
LatexCommand cite
key "Bondarenko:1997:AAA:257547.257553"

\end_inset

 are widely used in formal approaches to argumentation 
\begin_inset CommandInset citation
LatexCommand cite
key "Yuan:2011:MDG:2052136.2052205,Fan:2011:CRA:2034396.2034435"

\end_inset

.
 They provide several standard semantics, each capturing different intuitions
 about how to handle conflicts among arguments.
 This makes them a highly useful tool in argumentation and algorithms for
 computing extensions that have received considerable interest.
 
\end_layout

\begin_layout Standard
An abstract argument system or argumentation framework, as introduced in
 a seminal paper by Dung, is simply a pair 
\begin_inset Formula $\left\langle Arg,Def\right\rangle $
\end_inset

 where 
\begin_inset Formula $Arg$
\end_inset

 is a set of abstract arguments and 
\begin_inset Formula $Def$
\end_inset

 describes the attack relations between arguments.
 The set 
\begin_inset Formula $Arg$
\end_inset

 may be finite or infinite in general, however in this work we will concentrate
 on finite sets of arguments.
 An argumentation framework has an obvious representation as a directed
 graph where nodes are arguments and edges are drawn from attacking to attacked
 arguments.
\end_layout

\begin_layout Standard
While the word 
\emph on
argument
\emph default
 may recall several different meanings, abstract argument systems are not
 bound to any of them: an 
\emph on
abstract argument
\emph default
 is anything that may attack or be attacked by another argument.
 The attack relation is also known as 
\emph on
defeat
\emph default
 relation.
\end_layout

\begin_layout Standard
Given a set of arguments and attack relations, we want to decide the 
\emph on
justification state
\emph default
 of an argument or a set of arguments.
 Intuitively, an argument is justified if it can survive to attacks of other
 arguments.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset Graphics
	filename graph2.png
	height 7col%

\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:L'argomento-b-attacca"

\end_inset

Argument 
\emph on
b
\emph default
 attacks
\emph on
 
\emph default
argument
\emph on
 a
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset Graphics
	filename graph3.png
	height 7col%

\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Argomento-a-difeso"

\end_inset

Argument 
\emph on
a 
\emph default
is defended by argument 
\emph on
c
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A simple example of argumentation framework 
\begin_inset Formula $\left\langle \left\{ a,b\right\} ,\left\{ \left\langle b,a\right\rangle \right\} \right\rangle $
\end_inset

 is shown in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:L'argomento-b-attacca"

\end_inset

.
 In this case argument 
\emph on
b
\emph default
 is justified because it is not attacked by any other argument, while
\emph on
 
\emph default
argument 
\emph on
a
\emph default
 is not justified because it is attacked by argument 
\emph on
b
\emph default
.
\end_layout

\begin_layout Standard
In 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:Argomento-a-difeso"

\end_inset

, argument
\emph on
 a
\emph default
 is justified even
\emph on
 
\emph default
though it is attacked by 
\emph on
b
\emph default
, because it is defended by argument
\emph on
 c
\emph default
.
 In fact, since 
\emph on
b
\emph default
 is not justified, its attack has no validity over argument
\emph on
 a
\emph default
.
\end_layout

\begin_layout Definition
A Dung's abstract argumentation framework (AAF in short) is a pair 
\begin_inset Formula $\left\langle Arg,Def\right\rangle $
\end_inset

 where 
\begin_inset Formula $Arg$
\end_inset

 is a set of arguments and 
\begin_inset Formula $Def\subseteq Arg\times Arg$
\end_inset

 is a set of defeats between arguments.
\end_layout

\begin_layout Standard
One of the fundamental properties that a set of arguments 
\begin_inset Formula $S\subseteq Arg$
\end_inset

 must satisfy to be justified is the notion of being
\emph on
 conflict-free.
 
\emph default
A set must contain only arguments that do not conflict with each other,
 in the sense that an argument 
\begin_inset Formula $a\in S$
\end_inset

 must not attack any other argument 
\begin_inset Formula $b\in S$
\end_inset

.
\end_layout

\begin_layout Definition
Given an AAF 
\begin_inset Formula $\left\langle Arg,Def\right\rangle $
\end_inset

, a set of arguments 
\begin_inset Formula $S\subseteq Arg$
\end_inset

 is said to be 
\emph on
conflict-free
\emph default
 iff 
\begin_inset Formula $\nexists a,b\in S$
\end_inset

 such that 
\begin_inset Formula $\left\langle a,b\right\rangle \in Def$
\end_inset

.
\end_layout

\begin_layout Standard
The second fundamental property is that a set of arguments 
\begin_inset Formula $S\subseteq Arg$
\end_inset

 must be 
\emph on
admissible
\emph default
.
 Before formalizing this concept, we first define the acceptability
\begin_inset CommandInset citation
LatexCommand cite
key "Dung95onthe"

\end_inset

 of an argument with respect to a set 
\begin_inset Formula $S$
\end_inset

.
\end_layout

\begin_layout Definition
Given an AAF 
\begin_inset Formula $\left\langle Arg,Def\right\rangle $
\end_inset

 and a set of arguments 
\begin_inset Formula $S\subseteq Arg$
\end_inset

, an argument 
\begin_inset Formula $a\in Arg$
\end_inset

 is 
\emph on
acceptable
\emph default
 
\emph on
with respect to
\emph default
 
\begin_inset Formula $S$
\end_inset

 iff 
\begin_inset Formula $\forall b\in Arg$
\end_inset

 such that 
\begin_inset Formula $\left\langle b,a\right\rangle \in Def$
\end_inset

 then 
\begin_inset Formula $\exists c\in S$
\end_inset

 such that 
\begin_inset Formula $\left\langle c,b\right\rangle \in Def$
\end_inset

.
\end_layout

\begin_layout Standard
In other words, an argument 
\begin_inset Formula $a\in A$
\end_inset

 is acceptable with respect to a set of arguments 
\begin_inset Formula $S\subseteq Arg$
\end_inset

 if it is defended by 
\begin_inset Formula $S$
\end_inset

.
 Some cases of argument acceptability are shown in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:Accettabilità-argomenti-rispetto"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Graphics
	filename graph6.png
	width 18col%

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Argument 
\emph on
c
\emph default
 is acceptable w.r.t.
 
\begin_inset Formula $S$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Graphics
	filename accept2.png
	width 18col%

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Argument 
\emph on
c
\emph default
 is acceptable w.r.t.
 
\begin_inset Formula $S$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Graphics
	filename accept3.png
	width 25col%

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Argument 
\emph on
c
\emph default
 is not acceptable w.r.t.
 
\begin_inset Formula $S$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Accettabilità-argomenti-rispetto"

\end_inset

Accettabilità argomenti rispetto ad 
\begin_inset Formula $S$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Definition
Given an AAF 
\begin_inset Formula $\left\langle Arg,Def\right\rangle $
\end_inset

, a set of arguments 
\begin_inset Formula $S\subseteq Arg$
\end_inset

 is 
\emph on
admissible
\emph default
 iff 
\begin_inset Formula $S$
\end_inset

 is conflict-free and 
\begin_inset Formula $\forall a\in S$
\end_inset

, 
\begin_inset Formula $a$
\end_inset

 is acceptable with respect to 
\begin_inset Formula $S$
\end_inset

.
\end_layout

\begin_layout Standard
Intuitively, a set of arguments 
\begin_inset Formula $S$
\end_inset

 is admissible if it is able to defend itself from the attacks of any other
 arguments.
 Some cases of admissibility are shown in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:Ammissibilità-di"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename graph4.png
	width 20col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset Formula $S$
\end_inset

 is admissible
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename admissible2.png
	width 20col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset Formula $S$
\end_inset

 is not admissible
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Ammissibilità-di"

\end_inset

Admissibility of 
\begin_inset Formula $S$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Semantics of abstract argumentation frameworks
\end_layout

\begin_layout Standard
An argumentation semantics is the formal definition of a method (either
 declarative or procedural) ruling the argument evaluation process.
 We focus on the extension-based approach, where a semantics definition
 specifies how to derive a set of extensions from an argumentation framework,
 where an extension 
\emph on
E
\emph default
 of an argumentation framework 
\begin_inset Formula $\mathcal{F}=\left\langle Arg,Def\right\rangle $
\end_inset

 is simply a subset of 
\begin_inset Formula $Arg$
\end_inset

, intuitively representing a set of arguments which can “survive together”,
 are “collectively acceptable” or in general that are justified with regards
 to some criteria.
\end_layout

\begin_layout Standard
Different semantics have been developed that lead to different notions of
 extensions.
 First we define the most general concept of semantic evaluation function
 and extensions.
\end_layout

\begin_layout Definition
Given an AAF 
\begin_inset Formula $\mathcal{F}=\left\langle Arg,Def\right\rangle $
\end_inset

 and a semantics 
\begin_inset Formula $\mathfrak{S}$
\end_inset

, a 
\emph on
semantic evaluation function
\emph default
 
\begin_inset Formula $\xi_{\mathfrak{S}}\left(\mathcal{F},E\right)$
\end_inset

 returns true iff the set of arguments 
\begin_inset Formula $E\subseteq Arg$
\end_inset

 is deemed consistent using the semantics 
\begin_inset Formula $\mathfrak{S}$
\end_inset

 when evaluated over the argument system 
\begin_inset Formula $\mathcal{F}$
\end_inset

, that is 
\begin_inset Formula $E$
\end_inset

 is an extension for 
\begin_inset Formula $\mathcal{F}$
\end_inset

 under the semantics 
\begin_inset Formula $\mathfrak{S}$
\end_inset

.
 The set of all extensions prescribed by semantics 
\begin_inset Formula $\mathfrak{S}$
\end_inset

 for 
\begin_inset Formula $\mathcal{F}$
\end_inset

 is denoted as 
\begin_inset Formula $\mathcal{E}_{\mathfrak{S}}\left(\mathcal{F}\right)\subseteq2^{Arg}$
\end_inset

.
\end_layout

\begin_layout Standard
Also we formalize the notion of 
\emph on
justification state
\emph default
 for a single argument in an argumentation framework with respect to a given
 semantics.
\end_layout

\begin_layout Definition
Given an AAF 
\begin_inset Formula $\mathcal{F}=\left\langle Arg,Def\right\rangle $
\end_inset

, an argument 
\begin_inset Formula $a\in Arg$
\end_inset

 is said to be 
\emph on
justified
\emph default
 under the semantics 
\begin_inset Formula $\mathfrak{S}$
\end_inset

 iff 
\begin_inset Formula $\forall E\in\mathcal{E_{\mathfrak{S}}}\left(\mathcal{F}\right)$
\end_inset

, 
\begin_inset Formula $a\in E$
\end_inset

.
\end_layout

\begin_layout Standard
Given the basic definitions of admissibility in the previous section and
 of extension above, in this work we will focus on traditional types of
 extension defined below, namely: stable, preferred, complete, grounded
 and ideal.
\end_layout

\begin_layout Definition
Given an AAF 
\begin_inset Formula $\mathcal{F}=\left\langle Arg,Def\right\rangle $
\end_inset

, a set of arguments 
\begin_inset Formula $S\subseteq Arg$
\end_inset

 is a 
\emph on
complete 
\emph default
extension iff 
\begin_inset Formula $S$
\end_inset

 is admissible and 
\begin_inset Formula $\forall a\in Arg$
\end_inset

 such that 
\begin_inset Formula $a$
\end_inset

 is acceptable with respect to 
\begin_inset Formula $S$
\end_inset

, 
\begin_inset Formula $a\in S$
\end_inset

.
\end_layout

\begin_layout Standard
Or in other words, 
\begin_inset Formula $S$
\end_inset

 contains all the arguments that are acceptable with respect to 
\begin_inset Formula $S$
\end_inset

, that is 
\begin_inset Formula $\nexists a\in Arg\setminus S$
\end_inset

 such that 
\begin_inset Formula $a$
\end_inset

 is acceptable with respect to 
\begin_inset Formula $S$
\end_inset

.
 It is easy to see that deciding whether a set of arguments is complete
 can be computed in polynomial time with respect to the number of arguments
 and defeats.
\end_layout

\begin_layout Definition
Given an AAF 
\begin_inset Formula $\mathcal{F}=\left\langle Arg,Def\right\rangle $
\end_inset

, a set of arguments 
\begin_inset Formula $S\subseteq Arg$
\end_inset

 is the 
\emph on
grounded 
\emph default
extension iff 
\begin_inset Formula $S$
\end_inset

 is a minimal (w.r.t.
 
\begin_inset Formula $\subseteq$
\end_inset

) complete set of arguments, it is unique and is denoted as 
\begin_inset Formula $GE\left(\mathcal{F}\right)$
\end_inset

.
\end_layout

\begin_layout Standard
Deciding whether a set of arguments is grounded is certainly harder than
 deciding if a set is complete, and in particular it requires exponential
 time with respect to the number of arguments and defeats.
\end_layout

\begin_layout Standard
A stronger requirement than complete semantics is the stable semantics.
\end_layout

\begin_layout Definition
Given an AAF 
\begin_inset Formula $\mathcal{F}=\left\langle Arg,Def\right\rangle $
\end_inset

, a set of arguments 
\begin_inset Formula $S\subseteq Arg$
\end_inset

 is a 
\emph on
stable 
\emph default
extension iff 
\begin_inset Formula $S$
\end_inset

 is conflict-free and 
\begin_inset Formula $\forall a\in Arg\setminus S$
\end_inset

, 
\begin_inset Formula $\exists b\in S$
\end_inset

 such that 
\begin_inset Formula $\left\langle b,a\right\rangle \in Def$
\end_inset

.
\end_layout

\begin_layout Standard
A stable extension 
\begin_inset Formula $E\subseteq Arg$
\end_inset

 must defeat all arguments that are not in the set.
 By definition, any stable extension is also a complete extension and a
 maximal conflict-free set of 
\begin_inset Formula $\mathcal{F}$
\end_inset

.
 
\end_layout

\begin_layout Definition
Given an AAF 
\begin_inset Formula $\mathcal{F}=\left\langle Arg,Def\right\rangle $
\end_inset

, a set of arguments 
\begin_inset Formula $S\subseteq Arg$
\end_inset

 is a 
\emph on
preferred 
\emph default
extension iff 
\begin_inset Formula $S$
\end_inset

 is a maximal (w.r.t.
 
\begin_inset Formula $\subseteq$
\end_inset

) admissible set of arguments.
\end_layout

\begin_layout Standard
Preferred semantics relax the requirement of stable semantics to attack
 everything outside of the set.
 A preferred set is a maximal admissible set, in the sense that it's a largest
 set able to defend itself from attacks.
\end_layout

\begin_layout Definition
Given an AAF 
\begin_inset Formula $\mathcal{F}=\left\langle Arg,Def\right\rangle $
\end_inset

, a set of arguments 
\begin_inset Formula $S\subseteq Arg$
\end_inset

 is an 
\emph on
ideal extension
\emph default
 iff 
\begin_inset Formula $S$
\end_inset

 is admissible and 
\begin_inset Formula $\forall E\in\mathcal{E}_{preferred}\left(\mathcal{F}\right)$
\end_inset

, 
\begin_inset Formula $S\subseteq E$
\end_inset

.
\end_layout

\begin_layout Definition
The grounded set is an ideal set.
 Ideal sets that are strictly larger than the grounded set may exist.
\end_layout

\begin_layout Subsection
Probabilistic argumentation frameworks
\end_layout

\begin_layout Standard
Likelihoods and probabilities are used to introduce uncertainty to reasoning
 in complex domains.
 In argumentation frameworks, the uncertainty affects the interactions between
 arguments and the strength of conclusions.
 Within argument systems, an argumentation semantics defines a method by
 which a set of justified arguments can be deduced.
 As a reasoning approach, a semantics takes an argumentation framework as
 its knowledge base and produces a set of justified arguments as its output.
 The problem addressed by probabilistic argumentation frameworks is to introduce
 such uncertainty in argumentation frameworks and to identify the effects
 of probabilities on argument justification.
\end_layout

\begin_layout Standard
The approach is very simple.
 Dung's abstract argumentation frameworks are extended by introducing probabilit
ies assigned to arguments and defeats 
\begin_inset CommandInset citation
LatexCommand cite
key "Li:2011:PAF:2238189.2238191"

\end_inset

.
 The semantics of such a framework identifies the likelihood of different
 sets of arguments being justified according to different types of extensions.
 
\end_layout

\begin_layout Standard
A probabilistic argumentation framework (
\emph on
PrAF
\emph default
 for short) represents an entire set of AAFs that can potentially exist.
 A specific AAF has a certain likelihood of being 
\emph on
induced
\emph default
 from the PrAF.
\end_layout

\begin_layout Definition
A probabilistic argumentation framework is a tuple 
\begin_inset Formula $\left\langle A,P_{A},D,P_{D}\right\rangle $
\end_inset

 where 
\begin_inset Formula $\left\langle A,D\right\rangle $
\end_inset

 is an 
\emph on
AAF
\emph default
, 
\begin_inset Formula $P_{A}:A\rightarrow(0:1]$
\end_inset

 and 
\begin_inset Formula $P_{D}:D\rightarrow(0:1]$
\end_inset

.
\end_layout

\begin_layout Standard
The lower bound of these probabilities is not 0 because any argument or
 defeat with a likelihood of 0 cannot ever appear within a AAF induced from
 the PrAF.
 
\end_layout

\begin_layout Standard
The process of creating an AAFs that can be induced from the PrAF is called
 the 
\emph on
inducement
\emph default
 of a AAF from the PrAF.
 All arguments and defeats with a likelihood of 1 will be found in the induced
 AAF, which can then contain additional arguments and defeats, as specified
 by the following definition.
\end_layout

\begin_layout Definition
An AAF 
\begin_inset Formula $\left\langle Arg,Def\right\rangle $
\end_inset

 (or possible world) is said to be 
\emph on
induced
\emph default
 from a PrAF 
\begin_inset Formula $\left\langle A,P_{A},D,P_{D}\right\rangle $
\end_inset

 iff all of the following hold:
\end_layout

\begin_layout Itemize
\begin_inset Formula $Arg\subseteq A$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $Def\subseteq D\cap\left(Arg\times Arg\right)$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\forall a\in A$
\end_inset

 such that 
\begin_inset Formula $P_{A}\left(a\right)=1$
\end_inset

, 
\begin_inset Formula $a\in Arg$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\forall\left\langle f,t\right\rangle \in D$
\end_inset

 such that 
\begin_inset Formula $P_{D}\left(f,t\right)=1$
\end_inset

, 
\begin_inset Formula $\left\langle f,t\right\rangle \in Def$
\end_inset


\end_layout

\begin_layout Standard
The goal is to compute the likelihood that some set of arguments exists
 and is justified according to some semantics within the AAFs induced from
 a PrAF.
 A critical simplifying assumption is made, namely that the likelihood of
 one argument or defeat appearing in an induced AAF is independent of the
 likelihood of some other argument or defeat appearing in the same AAF.
\end_layout

\begin_layout Standard
The 
\begin_inset Formula $P_{D}$
\end_inset

 relation associates a conditional probability with each possible defeat
 over the existance of the incident arguments.
 That is, for some arguments 
\emph on
a
\emph default
, 
\emph on
b
\emph default
 and a generic induced AAF 
\begin_inset Formula $\left\langle Arg,Def\right\rangle $
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
P_{D}\left(a,b\right)=P\left(\left\langle a,b\right\rangle \in Def\mid a,b\in Arg\right)
\]

\end_inset


\end_layout

\begin_layout Standard
The probability 
\begin_inset Formula $P_{PrAF}\left(\mathcal{F}\right)$
\end_inset

 of some 
\begin_inset Formula $\mathcal{F}=\left\langle Arg,Def\right\rangle $
\end_inset

 being induced from a 
\begin_inset Formula $PrAF=\left\langle A,P_{A},D,P_{D}\right\rangle $
\end_inset

 can be computed via the joint probabilities of the arguments and defeat
 relations as follows:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
P_{PrAF}\left(\mathcal{F}\right)={\displaystyle \prod_{a\in Arg}P_{A}\left(a\right)}\cdot{\displaystyle \prod_{a\in Arg\setminus A}}\left(1-P_{A}\left(a\right)\right)\cdot{\displaystyle \prod_{d\in Def}P_{D}\left(d\right)\cdot}{\displaystyle \prod_{d\in DefA\setminus Def}\left(1-P_{D}\left(d\right)\right)}
\]

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $DefA=\left\{ \left\langle a,b\right\rangle \mid a,b\in Arg\wedge\left\langle a,b\right\rangle \in D\right\} $
\end_inset

 is the set of all possible defeats that can appear in an induced AAF.
\end_layout

\begin_layout Standard
The set of all possible AAFs that can be induced from a PrAF form a partitioned
 event space for which 
\begin_inset Formula ${\displaystyle \sum_{AAF}}P_{\mathcal{F}}\left(AAF\right)=1$
\end_inset

 holds.
\end_layout

\begin_layout Standard
Given a 
\begin_inset Formula $PrAF=\left\langle A,P_{A},D,P_{D}\right\rangle $
\end_inset

 and a semantics 
\begin_inset Formula $\mathfrak{S}$
\end_inset

, the likelihood of a set of arguments 
\begin_inset Formula $S$
\end_inset

 being justified according to 
\begin_inset Formula $\mathfrak{S}$
\end_inset

 is defined as follows:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
P_{\mathfrak{S}}\left(S\right)={\displaystyle \sum_{\mathcal{F}}P_{PrAF}\left(\mathcal{F}\right)}\,\, where\,\,\xi_{\mathfrak{S}}\left(\mathcal{F},S\right)=true
\]

\end_inset


\end_layout

\begin_layout Standard
The size of the set of possible AAFs which can be induced from a PrAF grows
 exponentially with regards to the number of arguments and defeats within
 the PrAF.
\end_layout

\begin_layout Section
Computing the probability that a set of arguments is an extension
\end_layout

\begin_layout Subsection
Monte Carlo simulation
\end_layout

\begin_layout Standard
In this section we describe a Monte Carlo simulation based approach to compute
 
\begin_inset Formula $P_{\mathfrak{S}}\left(S\right)$
\end_inset

 for an arbitrary 
\emph on
PrAF
\emph default
, where 
\begin_inset Formula $\mathfrak{S}$
\end_inset

 is a generic semantics for which a semantic evaluation function 
\begin_inset Formula $\mathcal{E}_{\mathfrak{S}}$
\end_inset

 exists.
 A Monte Carlo simulation operates by repeatedly sampling a distribution
 many times in order to approximate it.
 More specifically, such a simulation has three basic steps.
 First, given a possible set of inputs, a subset of these inputs is selected
 according to some probability distribution.
 Second, some computation is performed using the selected inputs.
 Finally, the results of repeating the first two steps multiple times is
 aggregated.
 Monte Carlo simulation has a long history, and has been applied to a variety
 of computationally difficult problems including inference in Bayesian Networks
\begin_inset CommandInset citation
LatexCommand cite
key "MaxwellChickering:1997:EAM:274158.274163"

\end_inset

, reinforcement learning
\begin_inset CommandInset citation
LatexCommand cite
key "Peters:2006:RLA:1227505.1227515"

\end_inset

 and game playing
\begin_inset CommandInset citation
LatexCommand cite
key "Gelly:2012:GCC:2093548.2093574"

\end_inset

.
 In this context of probabilistic argumentation frameworks, this process
 involves randomly inducing AAFs from a PrAF by sampling the space of possible
 AAFs in a way that approximates the AAFs true distribution in the probability
 space.
\end_layout

\begin_layout Standard
The algorithm 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:Algoritmo-per-approssimare"

\end_inset

 samples 
\begin_inset Formula $N$
\end_inset

 AAFs from the set of inducible AAFs.
 A single AAF is generated by randomly selecting arguments and defeats according
 to their likelihood of appearance.
 This resultant AAF is then evaluated for the presence of 
\begin_inset Formula $S$
\end_inset

 as extension through the use of the semantic evaluation function 
\begin_inset Formula $\xi_{\mathfrak{S}}$
\end_inset

, and if this function holds, the AAF is counted.
 The probability 
\begin_inset Formula $P_{\mathfrak{S}}\left(S\right)$
\end_inset

 is finally approximated as the ratio of the total number of AAFs in which
 
\begin_inset Formula $\xi_{\mathfrak{S}}$
\end_inset

 holds to the number AAFs sampled.
 As the number of trials increases, the error in the approximation of 
\begin_inset Formula $P_{\mathfrak{S}}\left(S\right)$
\end_inset

 shrinks.
 
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement h
wide false
sideways false
status collapsed

\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
Require: 
\series default
A Probabilistic Argumentation Framework
\series bold
 
\begin_inset Formula $PrAF=\left(A,PA,D,PD\right)$
\end_inset


\end_layout

\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
Require: 
\series default
A set of arguments 
\begin_inset Formula $S\subseteq A$
\end_inset


\end_layout

\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
Require: 
\series default
A number of trials 
\begin_inset Formula $N\in\mathbb{N}$
\end_inset


\end_layout

\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
Require: 
\series default
A semantic evaluation function 
\begin_inset Formula $\xi$
\end_inset


\end_layout

\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\size footnotesize
\begin_inset Formula $X=0$
\end_inset


\end_layout

\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
\begin_inset Formula $\forall I=0..N$
\end_inset

 do
\end_layout

\begin_deeper
\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
\begin_inset Formula $Arg=Def=\emptyset$
\end_inset


\end_layout

\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
\begin_inset Formula $\forall a\in A$
\end_inset

 do
\end_layout

\begin_deeper
\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\size footnotesize
Generate a random number
\series bold
 
\begin_inset Formula $r\in\left[0,1\right]$
\end_inset


\end_layout

\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
if 
\begin_inset Formula $r\leq P_{A}\left(a\right)$
\end_inset

 then
\end_layout

\begin_deeper
\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
\begin_inset Formula $Arg=Arg\cup\left\{ a\right\} $
\end_inset


\end_layout

\end_deeper
\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
end if
\end_layout

\end_deeper
\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
end for
\end_layout

\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
\begin_inset Formula $\forall\left\langle a,b\right\rangle \in D$
\end_inset

 
\series default
such that
\series bold
 
\begin_inset Formula $a,b\in Arg$
\end_inset

 do
\end_layout

\begin_deeper
\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\size footnotesize
Generate a random number
\series bold
 
\begin_inset Formula $r\in\left[0,1\right]$
\end_inset


\end_layout

\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
if 
\begin_inset Formula $r\leq P_{D}\left(\left\langle a,b\right\rangle \right)$
\end_inset

 then
\end_layout

\begin_deeper
\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
\begin_inset Formula $Def=Def\cup\left\{ \left\langle a,b\right\rangle \right\} $
\end_inset


\end_layout

\end_deeper
\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
end if
\end_layout

\end_deeper
\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
end for
\end_layout

\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
if 
\begin_inset Formula $\xi_{\mathfrak{S}}\left(\left\langle Arg,Def\right\rangle ,S\right)=true$
\end_inset

 then
\end_layout

\begin_deeper
\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
\begin_inset Formula $X=X+1$
\end_inset


\end_layout

\end_deeper
\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
end if
\end_layout

\end_deeper
\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
end for
\end_layout

\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
return 
\begin_inset Formula $Count/N$
\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:Algoritmo-per-approssimare"

\end_inset

Algorithm for approximating 
\begin_inset Formula $P_{PrAF}\left(X\right)$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Given 
\begin_inset Formula $X$
\end_inset

 the number of observed successes, 
\begin_inset Formula $N$
\end_inset

 the number of trials and 
\begin_inset Formula $p=X/N$
\end_inset

 the observed mean, the confidence interval for the real 
\begin_inset Formula $P_{\mathfrak{S}}\left(S\right)$
\end_inset

 is defined as follows
\begin_inset CommandInset citation
LatexCommand cite
key "Brown01intervalestimation"

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
P_{\mathfrak{S}}\left(S\right)=p\pm z_{1-\alpha/2}\cdot\sqrt{\frac{p\left(1-p\right)}{N}}\label{eq:CI}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
from which it is possible to derive the estimated number of trials for the
 given error level:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\epsilon=z_{1-\alpha/2}\cdot\sqrt{\frac{p\left(1-p\right)}{N}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
N=\frac{z_{1-\alpha/2}^{2}\cdot p\cdot\left(1-p\right)}{\epsilon^{2}}\label{eq:NaiveTrials}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The value of 
\begin_inset Formula $p$
\end_inset

 after a single trial will be either 0 or 1, making the approximation problemati
c.
 To overcome this problem, the Agresti-Coull interval
\begin_inset CommandInset citation
LatexCommand cite
key "agresti_1998"

\end_inset

 is used.
 The general form of this interval is the same as that of 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:CI"

\end_inset

, except that 
\begin_inset Formula $p$
\end_inset

 and 
\begin_inset Formula $N$
\end_inset

 are substituted by 
\begin_inset Formula $p'$
\end_inset

 and 
\begin_inset Formula $N'$
\end_inset

 being computed as follows:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
N'=N+z_{1-\alpha/2}^{2}\,\qquad p'=\frac{X+\left(z_{1-\alpha/2}^{2}/2\right)}{N'}\label{eq:AgrestiCoull}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
from which we can derive the new estimated number of trials to be used in
 algorithm 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:AlgoErr"

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
N=\frac{z_{1-\alpha/2}^{2}\cdot p'\cdot\left(1-p'\right)}{\epsilon^{2}}-z_{1-\alpha/2}^{2}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement h
wide false
sideways false
status collapsed

\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
Require: 
\series default
A Probabilistic Argumentation Framework
\series bold
 
\begin_inset Formula $PrAF=\left(A,P_{A},D,P_{D}\right)$
\end_inset


\end_layout

\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
Require: 
\series default
A set of arguments 
\begin_inset Formula $S\subseteq A$
\end_inset


\end_layout

\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
Require: 
\series default
A confidence level 
\begin_inset Formula $z_{1-\alpha/2}$
\end_inset


\end_layout

\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
Require: 
\series default
An error level 
\begin_inset Formula $\epsilon$
\end_inset


\end_layout

\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
Require: 
\series default
A semantic evaluation function 
\begin_inset Formula $\xi$
\end_inset


\end_layout

\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\size footnotesize
\begin_inset Formula $X=N=0$
\end_inset


\end_layout

\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
do
\end_layout

\begin_deeper
\begin_layout LyX-Code

\family roman
\size footnotesize
Generate 
\begin_inset Formula $\left\langle Arg,Def\right\rangle $
\end_inset

 as in algorithm 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:Algoritmo-per-approssimare"

\end_inset


\end_layout

\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
if 
\begin_inset Formula $\xi_{\mathfrak{S}}\left(\left\langle Arg,Def\right\rangle ,S\right)=true$
\end_inset

 then
\end_layout

\begin_deeper
\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
\begin_inset Formula $X=X+1$
\end_inset


\end_layout

\end_deeper
\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
end if
\end_layout

\begin_layout LyX-Code

\family roman
\size footnotesize
\begin_inset Formula $N=N+1$
\end_inset


\end_layout

\begin_layout LyX-Code

\family roman
\size footnotesize
\begin_inset Formula $p'=\frac{X+\left(z_{1-\alpha/2}^{2}/2\right)}{N+z_{1-\alpha/2}^{2}}$
\end_inset


\end_layout

\begin_layout LyX-Code

\family roman
\size footnotesize
\begin_inset Formula $\hat{N}=\frac{z_{1-\alpha/2}^{2}\cdot p'\cdot\left(1-p'\right)}{\epsilon^{2}}-z_{1-\alpha/2}^{2}$
\end_inset


\end_layout

\end_deeper
\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
while 
\begin_inset Formula $N\leq\hat{N}$
\end_inset


\end_layout

\begin_layout LyX-Code
\paragraph_spacing single
\noindent

\family roman
\series bold
\size footnotesize
return 
\begin_inset Formula $X/N$
\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:AlgoErr"

\end_inset

Algorithm for approximating 
\begin_inset Formula $P_{PrAF}\left(X\right)$
\end_inset

 given a confidence interval
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Tractable cases
\end_layout

\begin_layout Standard
The number of AAFs that can be induced from a PrAF is certainly exponential
 in the number of arguments and defeats, but there are certain cases where
 computing the probability for a property does not require evaluating the
 whole space of induced AAFs.
 In particular, it can be shown that the probability of a set of arguments
 being conflict-free and admissible can be computed in polynomial time with
 respect to the number of arguments and defeats.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:Pcf"

\end_inset

Given 
\begin_inset Formula $PrAF=\left\langle A,P_{A},D,P_{D}\right\rangle $
\end_inset

 and a set of arguments 
\begin_inset Formula $S\subseteq Arg$
\end_inset

, then 
\begin_inset Formula $P_{CF}\left(S\right)=P_{1}\left(S\right)\cdot P_{2}\left(S\right)$
\end_inset

, where:
\end_layout

\begin_layout Lemma
\begin_inset Formula $P_{1}\left(S\right)={\displaystyle \prod_{a\in S}P_{A}\left(a\right)}$
\end_inset

,
\end_layout

\begin_layout Lemma
\begin_inset Formula $P_{2}\left(S\right)={\displaystyle \prod_{\begin{subarray}{c}
\left\langle b,c\right\rangle \in D\\
\wedge b,c\in S
\end{subarray}}}\left(1-P_{D}\left(\left\langle b,c\right\rangle \right)\right)$
\end_inset


\end_layout

\begin_layout Standard
Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:Pcf"

\end_inset

 derives from the fact that 
\begin_inset Formula $CF\left(S\right)$
\end_inset

 may expressed as the probabilistic event 
\begin_inset Formula $E_{CF}=e_{1}\wedge e_{2}$
\end_inset

, where:
\end_layout

\begin_layout Itemize
\begin_inset Formula $e_{1}$
\end_inset

 is the event that all arguments in 
\begin_inset Formula $S$
\end_inset

 occur;
\end_layout

\begin_layout Itemize
\begin_inset Formula $e_{2}$
\end_inset

 is the event that 
\begin_inset Formula $S$
\end_inset

 is conflict-free.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:Padmissible"

\end_inset

Given 
\begin_inset Formula $PrAF=\left\langle A,P_{A},D,P_{D}\right\rangle $
\end_inset

 and a set of arguments 
\begin_inset Formula $S\subseteq Arg$
\end_inset

, then 
\begin_inset Formula $P_{admissible}\left(S\right)=P_{CF}\left(S\right)\cdot P_{3}\left(S\right)$
\end_inset

, where:
\end_layout

\begin_layout Lemma
\begin_inset Formula $P_{3}\left(S\right)={\displaystyle \prod_{a\in A\setminus S}\left(P_{31}\left(S,a\right)+P_{32}\left(S,a\right)+P_{33}\left(S,a\right)\right)}$
\end_inset

,
\end_layout

\begin_layout Lemma
\begin_inset Formula $P_{31}\left(S,a\right)=1-P_{A}\left(a\right)$
\end_inset

,
\end_layout

\begin_layout Lemma
\begin_inset Formula $P_{32}\left(S,a\right)=P_{A}\left(d\right)\cdot{\displaystyle \prod_{\begin{subarray}{c}
\left\langle a,b\right\rangle \in D\\
\wedge b\in S
\end{subarray}}\left(1-P_{D}\left(\left\langle a,b\right\rangle \right)\right)}$
\end_inset

,
\end_layout

\begin_layout Lemma
\begin_inset Formula $P_{33}\left(S,a\right)=P_{A}\left(d\right)\cdot\left(1-{\displaystyle \prod_{\begin{subarray}{c}
\left\langle a,b\right\rangle \in D\\
\wedge b\in S
\end{subarray}}\left(1-P_{D}\left(\left\langle a,b\right\rangle \right)\right)}\right)\cdot\left(1-{\displaystyle \prod_{\begin{subarray}{c}
\left\langle c,a\right\rangle \in D\\
\wedge c\in S
\end{subarray}}\left(1-P_{D}\left(\left\langle c,a\right\rangle \right)\right)}\right)$
\end_inset


\end_layout

\begin_layout Standard
Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:Padmissible"

\end_inset

 extends 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:Pcf"

\end_inset

 to the case of admissibility.
 We introduce the joint event that all arguments in 
\begin_inset Formula $S$
\end_inset

 are acceptable with respect to 
\begin_inset Formula $S$
\end_inset

; that is for each argument 
\begin_inset Formula $a\notin A\setminus S$
\end_inset

 one of the following independent events must hold:
\end_layout

\begin_layout Itemize
The argument 
\begin_inset Formula $a$
\end_inset

 does not occur;
\end_layout

\begin_layout Itemize
The argument 
\begin_inset Formula $a$
\end_inset

 occurs but does not defeat any argument in 
\begin_inset Formula $S$
\end_inset

;
\end_layout

\begin_layout Itemize
The argument 
\begin_inset Formula $a$
\end_inset

 occurs and there exists at least one defeat from 
\begin_inset Formula $a$
\end_inset

 to an argument 
\begin_inset Formula $b\in S$
\end_inset

, but there exists at least one defeat from an argument 
\begin_inset Formula $c\in S$
\end_inset

 to 
\begin_inset Formula $a$
\end_inset

, in which case 
\begin_inset Formula $S$
\end_inset

 is able to defend itself.
\end_layout

\begin_layout Subsection
Optimization of hard cases based on tractable cases
\end_layout

\begin_layout Standard
The fact that 
\begin_inset Formula $P_{CF}\left(S\right)$
\end_inset

 is computable in polynomial time with respect to the number of arguments
 and defeats, makes the computation of 
\begin_inset Formula $P_{\mathfrak{S}}\left(S\right)$
\end_inset

 more efficient for semantics that require the conflict-free principle.
\end_layout

\begin_layout Standard
We observe that 
\begin_inset Formula $P_{\mathfrak{S}\cap CF}\left(S\right)=P_{\mathfrak{S}\mid CF}\left(S\right)\cdot P_{CF}\left(S\right)$
\end_inset

, and that as long as 
\begin_inset Formula $\mathcal{E}_{\mathfrak{S}}\left(\mathcal{F}\right)\subseteq\mathcal{E}_{CF}\left(\mathcal{F}\right)$
\end_inset

 then 
\begin_inset Formula $P_{\mathfrak{S}}\left(S\right)=P_{\mathfrak{S}\cap CF}\left(S\right)$
\end_inset

 holds.
 This is valid for all traditional types of extension, as the set of arguments
 is required to be at least conflict-free.
 Given the exact value of 
\begin_inset Formula $P_{CF}\left(S\right)$
\end_inset

 can be computed in polynomial time, we focus on the problem of estimating
 
\begin_inset Formula $P_{\mathfrak{S}\mid CF}\left(S\right)$
\end_inset

 with Monte Carlo rather than 
\begin_inset Formula $P_{\mathfrak{S}}\left(S\right)$
\end_inset

.
\end_layout

\begin_layout Standard
Given 
\begin_inset Formula $X$
\end_inset

 the number of observed successes, 
\begin_inset Formula $N$
\end_inset

 the number of trials and 
\begin_inset Formula $p=X/N$
\end_inset

 the observed mean, the confidence interval for the real 
\begin_inset Formula $P_{\mathfrak{S}}\left(S\right)$
\end_inset

 is defined as follows:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
P_{CF}\left(S\right)\cdot P_{\mathfrak{S}\mid CF}\left(S\right)=P_{CF}\left(S\right)\cdot\left(p\pm z_{1-\alpha/2}\cdot\sqrt{\frac{p\left(1-p\right)}{N}}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
from which we derive:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\epsilon=P_{CF}\left(S\right)\cdot z_{1-\alpha/2}\cdot\sqrt{\frac{p\left(1-p\right)}{N}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
N=\frac{z_{1-\alpha/2}^{2}\cdot p\left(1-p\right)}{\epsilon^{2}}\cdot P_{CF}^{2}\left(S\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Again, we use the Agresti-Coull interval, similar to 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:AgrestiCoull"

\end_inset

, to obtain the following estimated number of trials:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
N=\frac{z_{1-\alpha/2}^{2}\cdot p'\cdot\left(1-p'\right)}{\epsilon^{2}}\cdot P_{CF}^{2}\left(S\right)-z_{1-\alpha/2}^{2}
\]

\end_inset


\end_layout

\begin_layout Standard
This new formula will replace the old estimation in algorithm 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:AlgoErr"

\end_inset

, together with the returned value 
\begin_inset Formula $P_{CF}\left(S\right)\cdot X/N$
\end_inset

.
\end_layout

\begin_layout Paragraph*
Theoretical efficiency of the new algorithm.
\end_layout

\begin_layout Standard
Said 
\begin_inset Formula $\hat{N}$
\end_inset

 the number of trials and 
\begin_inset Formula $\hat{p}$
\end_inset

 the observed mean in the naive approach, we want to determine the new number
 of trials in terms of the naive trials.
\end_layout

\begin_layout Standard
For simplicity, we recall 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:NaiveTrials"

\end_inset

 without the Agresti-Coull perturbations:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\hat{N}=\frac{z_{1-\alpha/2}^{2}\cdot\hat{p}\cdot\left(1-\hat{p}\right)}{\epsilon^{2}}
\]

\end_inset


\end_layout

\begin_layout Standard
In this context, 
\begin_inset Formula $\hat{p}$
\end_inset

 of the naive algorithm estimates 
\begin_inset Formula $P_{\mathfrak{S}}\left(S\right)$
\end_inset

, while 
\begin_inset Formula $p$
\end_inset

 in the new algorithm estimates 
\begin_inset Formula $P_{\mathfrak{S}\mid CF}\left(S\right)$
\end_inset

.
 Assuming 
\begin_inset Formula $\hat{p}\rightarrow P_{\mathfrak{S}}\left(S\right)$
\end_inset

 and 
\begin_inset Formula $p\rightarrow P_{\mathfrak{S}\mid CF}\left(S\right)$
\end_inset

, the following statements hold:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
N=\frac{z_{1-\alpha/2}^{2}\cdot P_{\mathfrak{S}\mid CF}\left(S\right)\cdot\left(1-P_{\mathfrak{S}\mid CF}\left(S\right)\right)}{\epsilon^{2}}\cdot P_{CF}^{2}\left(S\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\hat{N}=\frac{z_{1-\alpha/2}^{2}\cdot P_{\mathfrak{S}}\left(S\right)\cdot\left(1-P_{\mathfrak{S}}\left(S\right)\right)}{\epsilon^{2}}
\]

\end_inset


\end_layout

\begin_layout Standard
Therefore we can write 
\begin_inset Formula $N$
\end_inset

 in terms of 
\begin_inset Formula $\hat{N}$
\end_inset

 as follows:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
N=\hat{N}\cdot\frac{P_{\mathfrak{S}\mid CF}\left(S\right)\cdot\left(1-P_{\mathfrak{S}\mid CF}\left(S\right)\right)}{P_{\mathfrak{S}}\left(S\right)\cdot\left(1-P_{\mathfrak{S}}\left(S\right)\right)}\cdot P_{CF}^{2}\left(S\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Since 
\begin_inset Formula $P_{\mathfrak{S}}\left(S\right)=P_{\mathfrak{S}\mid CF}\left(S\right)\cdot P_{CF}\left(S\right)$
\end_inset

 we derive the following relation:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
N=\hat{N}\cdot\frac{1-P_{\mathfrak{S}\mid CF}\left(S\right)}{1-P_{\mathfrak{S}}\left(S\right)}\cdot P_{CF}\left(S\right)\label{eq:NewTrials}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Together with the number of trials, we want to determine the relation between
 the number of successes 
\begin_inset Formula $\hat{X}$
\end_inset

 of the naive algorithm and the number of successes 
\begin_inset Formula $X$
\end_inset

 of the new algorithm.
 As we will see in the experiments, this is an interesting measure for the
 grounded semantics when 
\begin_inset Formula $P_{complete}\left(S\right)\cong P_{grounded}\left(S\right)$
\end_inset

.
\end_layout

\begin_layout Standard
Under the same above assumptions and the basic laws of probability, we can
 assert what follows:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\hat{X}=\hat{N}\cdot P_{\mathfrak{S}}\left(S\right)\qquad\qquad X=N\cdot P_{\mathfrak{S}\mid CF}\left(S\right)
\]

\end_inset


\end_layout

\begin_layout Standard
By substituting 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:NewTrials"

\end_inset

 we get the following:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
X=\hat{N}\cdot\frac{P_{\mathfrak{S}\mid CF}\left(S\right)\cdot\left(1-P_{\mathfrak{S}\mid CF}\left(S\right)\right)}{P_{\mathfrak{S}}\left(S\right)\cdot\left(1-P_{\mathfrak{S}}\left(S\right)\right)}\cdot P_{CF}^{2}\left(S\right)\cdot P_{\mathfrak{S}\mid CF}\left(S\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Since 
\begin_inset Formula $P_{\mathfrak{S}}\left(S\right)=P_{\mathfrak{S}\mid CF}\left(S\right)\cdot P_{CF}\left(S\right)$
\end_inset

 the following holds:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
X=\hat{N}\cdot P_{\mathfrak{S}}\left(S\right)\cdot\frac{1-P_{\mathfrak{S}\mid CF}\left(S\right)}{1-P_{\mathfrak{S}}\left(S\right)}
\]

\end_inset


\end_layout

\begin_layout Standard
Finally, from 
\begin_inset Formula $\hat{X}=\hat{N}\cdot P_{\mathfrak{S}}\left(S\right)$
\end_inset

 we can derive the following relation between 
\begin_inset Formula $X$
\end_inset

 and 
\begin_inset Formula $\hat{X}$
\end_inset

 (and recall 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:NewTrials"

\end_inset

 for completeness):
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
X=\hat{X}\cdot\frac{1-P_{\mathfrak{S}\mid CF}\left(S\right)}{1-P_{\mathfrak{S}}\left(S\right)}\qquad\qquad N=\hat{N}\cdot\frac{1-P_{\mathfrak{S}\mid CF}\left(S\right)}{1-P_{\mathfrak{S}}\left(S\right)}\cdot P_{CF}\left(S\right)
\]

\end_inset


\end_layout

\begin_layout Standard
We observe that 
\begin_inset Formula $P_{\mathfrak{S}\mid CF}\left(S\right)\geq P_{\mathfrak{S}}\left(S\right)$
\end_inset

, from which 
\begin_inset Formula $1-P_{\mathfrak{S}\mid CF}\left(S\right)\leq1-P_{\mathfrak{S}}\left(S\right)$
\end_inset

 follows.
 Therefore it is easy to see that an upperbound to the number of trials
 is 
\begin_inset Formula $N\leq P_{CF}\left(S\right)$
\end_inset

.
\end_layout

\begin_layout Standard
For what concerns the number of successes, there is no good news because
 
\begin_inset Formula $X$
\end_inset

 can assume any value between 0 and 1 independently from 
\begin_inset Formula $P_{CF}\left(S\right)$
\end_inset

.
 In the worst case where 
\begin_inset Formula $P_{\mathfrak{S}\mid CF}\left(S\right)\rightarrow0$
\end_inset

, 
\begin_inset Formula $X\rightarrow\hat{X}$
\end_inset

.
\end_layout

\begin_layout Standard
Fixed 
\begin_inset Formula $P_{CF}\left(S\right)$
\end_inset

, the lower 
\begin_inset Formula $P_{\mathfrak{S}\mid CF}\left(S\right)$
\end_inset

 is the higher the number of successes with respect to the naive algorithm
 is.
 This is a surprising result because intuitively 
\begin_inset Formula $X\propto P_{\mathfrak{S}\mid CF}\left(S\right)$
\end_inset

.
\end_layout

\begin_layout Standard
Fixed 
\begin_inset Formula $P_{\mathfrak{S}\mid CF}\left(S\right)$
\end_inset

, it is easy to see that 
\begin_inset Formula $1-P_{\mathfrak{S}\mid CF}\left(S\right)\leq\frac{1-P_{\mathfrak{S}\mid CF}\left(S\right)}{1-P_{\mathfrak{S}}\left(S\right)}\leq1$
\end_inset

, and that the lower 
\begin_inset Formula $P_{CF}\left(S\right)$
\end_inset

 is the lower the number of successes with respect to the naive algorithm
 is.
\end_layout

\begin_layout Section
Evaluation of tractable cases for probabilistic argumentation frameworks
\end_layout

\begin_layout Subsection
Architecture and setting for the experiments
\end_layout

\begin_layout Standard
We have described, given some PrAF, two approaches to computing the likelihood
 of a chosen set of arguments being justified with respect to some semantics.
 Our purpose is to evaluate the running time and iterations of the optimized
 Monte Carlo algorithm compared to the naive algorithm, given the same error
 level.
\end_layout

\begin_layout Standard
Both algorithms have been implemented in Java by using hashed data structures
 to efficiently encode the sparseness of the graphs.
\end_layout

\begin_layout Standard
The experiments have been run for differently sized PrAFs containing between
 10 and 20 arguments, the chosen sets of arguments containing between 6
 and 8 arguments and an error level of 
\begin_inset Formula $\epsilon=0.01$
\end_inset

 and 
\begin_inset Formula $\epsilon=0.005$
\end_inset

 with confidence level of 95%.
\end_layout

\begin_layout Standard
First, we randomly generate a PrAF with 20 arguments given three probability
 distributions: one over argument probabilities, one over the outdegree
 of arguments and one over the defeat probabilities.
\end_layout

\begin_layout Standard
Second, we search for a suitable set of arguments 
\begin_inset Formula $S$
\end_inset

 for the generated PrAF in order to satisfy the following constraints:
\end_layout

\begin_layout Itemize
\begin_inset Formula $0.6\leq P_{CF}\left(S\right)<1.0$
\end_inset

, to obtain a higher 
\begin_inset Formula $P_{\mathfrak{S}}\left(S\right)$
\end_inset

;
\end_layout

\begin_layout Itemize
\begin_inset Formula $P_{\mathfrak{S}}\left(S\right)\ge0.2$
\end_inset

, otherwise the resulting probabilities wouldn't be perceptible.
\end_layout

\begin_layout Standard
We repeat the process of generating the instance 
\begin_inset Formula $\left\langle PrAF,S\right\rangle $
\end_inset

 for a number of iterations, then we choose the most satisfying based on
 the above constraints.
\end_layout

\begin_layout Standard
Third, we delete arguments from this 
\begin_inset Formula $\left\langle PrAF,S\right\rangle $
\end_inset

 instance in order to generate the remaining instances with a number of
 arguments between 10 and 19, yet satisfying the above constraints.
\end_layout

\begin_layout Standard
Finally, given an error level of either 
\begin_inset Formula $\epsilon=0.01$
\end_inset

 or 
\begin_inset Formula $\epsilon=0.005$
\end_inset

 and confidence level of 95% (
\begin_inset Formula $z_{1-\alpha/2}=1.96$
\end_inset

), for each semantics 
\begin_inset Formula $\mathfrak{S}$
\end_inset

 and instance 
\begin_inset Formula $\left\langle PrAF,S\right\rangle $
\end_inset

 we run our experiment 20 times, that is we compute 
\begin_inset Formula $P_{\mathfrak{S}}\left(S\right)$
\end_inset

 with both algorithms to estimate the CPU time, the number of successes
 and the number of iterations.
\end_layout

\begin_layout Subsection
Generating probabilistic argumentation frameworks
\end_layout

\begin_layout Standard
We randomly generate a 
\begin_inset Formula $PrAF=\left\langle A,P_{A},D,P_{D}\right\rangle $
\end_inset

 given a number of arguments and the probability distributions shown in
 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:Probability-distributions-for"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename argument_probs.png
	width 30col%
	height 30col%

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename outdegree_probs.png
	width 30col%
	height 30col%

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename defeat_probs.png
	width 30col%
	height 30col%

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Probability-distributions-for"

\end_inset

Probability distributions for generating PrAFs
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
We used high probabilities for arguments in order to increase 
\begin_inset Formula $P_{CF}\left(S\right)$
\end_inset

 of a possible set 
\begin_inset Formula $S$
\end_inset

.
 For example, if 
\begin_inset Formula $\left|S\right|=8$
\end_inset

 and 
\begin_inset Formula $\forall a\in S$
\end_inset

 
\begin_inset Formula $P_{A}\left(a\right)=0.95$
\end_inset

 and there's no defeat between arguments in 
\begin_inset Formula $S$
\end_inset

, then 
\begin_inset Formula $P_{CF}\left(S\right)=\left(0.95\right)^{8}\cong0.66$
\end_inset

 which already near the lower bound.
\end_layout

\begin_layout Standard
The outdegree of arguments instead is low because a higher number would
 increase the chances to have defeats between arguments in 
\begin_inset Formula $S$
\end_inset

 and thus make 
\begin_inset Formula $P_{CF}\left(S\right)$
\end_inset

 even lower.
\end_layout

\begin_layout Standard
About the defeat probabilities it might seem counterintuitive to have an
 high probability, but it's required to have higher 
\begin_inset Formula $P_{complete}\left(S\right)$
\end_inset

 and consequentially a higher 
\begin_inset Formula $P_{\mathfrak{S}}\left(S\right)$
\end_inset

 in case of complete and grounded semantics.
 For instance, in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:LowerPx"

\end_inset

 it will be highly probable that the defeat will not occur and then the
 set 
\begin_inset Formula $S$
\end_inset

 will not complete because 
\begin_inset Formula $b$
\end_inset

 is acceptable.
 In 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:HigherPx"

\end_inset

 instead the defeat will likely occur so that 
\begin_inset Formula $P_{complete}\left(S\right)$
\end_inset

 will be higher together with 
\begin_inset Formula $P_{\mathfrak{S}}\left(S\right)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \qquad{}
\end_inset


\begin_inset Graphics
	filename pdefeat1.png
	width 25col%

\end_inset


\begin_inset space \qquad{}
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:LowerPx"

\end_inset

Lower 
\begin_inset Formula $P_{complete}\left(S\right)$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \qquad{}
\end_inset


\begin_inset Graphics
	filename pdefeat2.png
	width 25col%

\end_inset


\begin_inset space \qquad{}
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:HigherPx"

\end_inset

Higher 
\begin_inset Formula $P_{complete}\left(S\right)$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Example of probabilities over defeats
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Searching for a suitable set of arguments
\end_layout

\begin_layout Standard
Given PrAF we choose a set of arguments 
\begin_inset Formula $S$
\end_inset

 such that 
\begin_inset Formula $0.6\leq P_{CF}\left(S\right)<1.0$
\end_inset

 and 
\begin_inset Formula $P_{\mathfrak{S}}\left(S\right)$
\end_inset

 to be as high as we can in order to obtain perceptible results.
 This problem is harder than the original problem, because not only we have
 to evaluate 
\begin_inset Formula $P_{\mathfrak{S}}\left(S\right)$
\end_inset

 but also find the set 
\begin_inset Formula $S$
\end_inset

.
\end_layout

\begin_layout Standard
Given a 
\begin_inset Formula $PrAF=\left\langle A,P_{A},D,P_{D}\right\rangle $
\end_inset

 we find the set 
\begin_inset Formula $S$
\end_inset

 such that it maximizes the following objective function:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{array}{c}
\arg{\displaystyle \max_{S}}\, c_{1}\cdot{\displaystyle \prod_{a\in S}}P_{A}\left(a\right)-c_{2}\cdot{\displaystyle \sum_{\begin{subarray}{c}
a\in S\\
b\in A
\end{subarray}}}P_{A}\left(b\right)\cdot P_{D}\left(b,a\right)-c_{3}\cdot{\displaystyle \sum_{a\notin S}P_{A}\left(a\right)}\end{array}
\]

\end_inset


\end_layout

\begin_layout Standard
Intuitively, the first term we maximize is the event that 
\begin_inset Formula $S$
\end_inset

 occurrs so that 
\begin_inset Formula $P_{CF}\left(S\right)$
\end_inset

 will be high.
 The second term minimizes the probability of attacks against the set 
\begin_inset Formula $S$
\end_inset

 so that 
\begin_inset Formula $P_{admissible}\left(S\right)$
\end_inset

 will be high.
 Then we minimize the event that arguments outside of 
\begin_inset Formula $S$
\end_inset

 occurs so that 
\begin_inset Formula $P_{complete}\left(S\right)$
\end_inset

 will be high.
\end_layout

\begin_layout Standard
We are not interested in the final value of the function, so we decide to
 substitute the first term with a sum yet have similar results for the set
 
\begin_inset Formula $S$
\end_inset

.
 The objective function is now linear and 
\begin_inset Formula $S$
\end_inset

 can be expressed with binary variables 
\begin_inset Formula $s_{a}$
\end_inset

 such that 
\begin_inset Formula $a\in S$
\end_inset

 iff 
\begin_inset Formula $s_{a}=1$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{array}{c}
\arg{\displaystyle \max_{S}}\, c_{1}\cdot{\displaystyle \sum_{a\in A}}s_{a}\cdot P_{A}\left(a\right)-c_{2}\cdot{\displaystyle \sum_{a,b\in A}}s_{a}\cdot P_{A}\left(b\right)\cdot P_{D}\left(b,a\right)-c_{3}\cdot{\displaystyle \sum_{a\in A}\left(1-s_{a}\right)\cdot P_{A}\left(a\right)}\\
\forall a\in A:\, s_{a}\in\left\{ 0,1\right\} 
\end{array}
\]

\end_inset


\end_layout

\begin_layout Standard
The three constants have been chosen empirically to be: 
\begin_inset Formula $c_{1}=1,c_{2}=3,c_{3}=1$
\end_inset

.
\end_layout

\begin_layout Standard
After finding 
\begin_inset Formula $S$
\end_inset

 by solving the above mixed-integer linear programming problem, it is possible
 to run local search algorithms in order to improve both 
\begin_inset Formula $P_{CF}\left(S\right)$
\end_inset

 and 
\begin_inset Formula $P_{\mathfrak{S}}\left(S\right)$
\end_inset

.
 We adopted a simple hill climbing by generating the neighborhood 
\begin_inset Formula $N_{S}$
\end_inset

 of 
\begin_inset Formula $S$
\end_inset

 with three mutation rules:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
N_{S}=\left\{ \hat{S}\mid\begin{array}{c}
\hat{S}=S\setminus\left\{ a\right\} ,a\in S\,\vee\\
\hat{S}=S\cup\left\{ a\right\} ,a\notin S\,\vee\\
\hat{S}=\left(S\setminus\left\{ a\right\} \right)\cup\left\{ b\right\} ,a\in S,b\notin S
\end{array}\right\} 
\]

\end_inset


\end_layout

\begin_layout Standard
This will usually lead to a set of arguments 
\begin_inset Formula $S$
\end_inset

 with 
\begin_inset Formula $0.6\leq P_{CF}\left(S\right)<1.0$
\end_inset

 but very low 
\begin_inset Formula $P_{\mathfrak{S}}\left(S\right)$
\end_inset

.
 For this reason, we manually manipulate the probabilities on arguments
 and defeats to increase 
\begin_inset Formula $P_{\mathfrak{S}}\left(S\right)$
\end_inset

 yet keeping 
\begin_inset Formula $P_{CF}\left(S\right)$
\end_inset

 constrained.
 This is doable as long as the number of arguments is small.
\end_layout

\begin_layout Subsection
Results
\end_layout

\begin_layout Standard
In the previous sections we constructed 10 instances 
\begin_inset Formula $\left\langle PrAF,S\right\rangle $
\end_inset

 of the problem, with number of arguments between 10 and 20.
 
\end_layout

\begin_layout Standard
The charts in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:Characteristics-of-chosen"

\end_inset

 describe the characteristics of each problem instance in terms of size
 and probabilities for each semantics computed with an error of 
\begin_inset Formula $\epsilon=0.005$
\end_inset

.
 We intentionally let the values of 
\begin_inset Formula $P_{complete}\left(S\right)$
\end_inset

 and 
\begin_inset Formula $P_{grounded}\left(S\right)$
\end_inset

 decrease with the number of arguments and defeats, otherwise the problem
 of finding a better set 
\begin_inset Formula $S$
\end_inset

 would be too hard.
\end_layout

\begin_layout Standard
The cardinality of the chosen set of arguments is 
\begin_inset Formula $\left|S\right|=6$
\end_inset

 for the the 
\begin_inset Formula $PrAF$
\end_inset

 of 10 arguments, 
\begin_inset Formula $\left|S\right|=7$
\end_inset

 for 11 and 12 arguments, and 
\begin_inset Formula $\left|S\right|=8$
\end_inset

 for 
\begin_inset Formula $\left|A\right|\geq13$
\end_inset

.
\end_layout

\begin_layout Standard
For 10 arguments 
\begin_inset Formula $P_{CF}\left(S\right)=0.69$
\end_inset

 while for 20 arguments 
\begin_inset Formula $P_{CF}\left(S\right)=0.62$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename instance_probs.png
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Probability of each semantics
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename instance_sizes.png
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Defeats and arguments in 
\begin_inset Formula $S$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Characteristics-of-chosen"

\end_inset

Characteristics of chosen problem instances
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We chose to run the experiments for the complete and grounded semantics.
 For each instance and for each semantics we run the experiment 20 times,
 with a confidence level of 95% and error levels of 
\begin_inset Formula $\epsilon=0.01$
\end_inset

 and 
\begin_inset Formula $\epsilon=0.005$
\end_inset

.
 Finally we compute the mean value of the CPU time and the percentage of
 the number of Monte Carlo trials and successes with respect to the naive
 algorithm.
\end_layout

\begin_layout Standard
The run time comparison for the complete semantics is shown in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:Complete01"

\end_inset

 with 
\begin_inset Formula $\epsilon=0.01$
\end_inset

 and in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:Complete005"

\end_inset

 with 
\begin_inset Formula $\epsilon=0.005$
\end_inset

.
 As expected the number of iterations for 20 arguments is 
\begin_inset Formula $N\leq P_{CF}\left(S\right)=0.62$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename complete_absolute_01.png
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Absolute time and number of trials
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename complete_relative_01.png
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Time, trials and successes percentage
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Complete01"

\end_inset

Run time comparison for the complete semantics with 
\begin_inset Formula $\epsilon=0.01$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename complete_absolute_005.png
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Absolute time and number of trials
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename complete_relative_005.png
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:CompleteRelative005"

\end_inset

Time, trials and successes percentage
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Complete005"

\end_inset

Run time comparison for the complete semantics with 
\begin_inset Formula $\epsilon=0.005$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Deciding whether a set of arguments is complete can be computed in polynomial
 time with respect to the number of arguments and defeats for a given AAF.
 For this reason, it can be seen that there is a constant relation between
 the number of iterations and the CPU time percentage for the complete semantics
, that is more especially appreciable in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:CompleteRelative005"

\end_inset

.
\end_layout

\begin_layout Standard
This is not true for the grounded semantics which is an harder decision
 problem as shown in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:Grounded01"

\end_inset

 with 
\begin_inset Formula $\epsilon=0.01$
\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:Grounded005"

\end_inset

 with 
\begin_inset Formula $\epsilon=0.005$
\end_inset

.
 Interestingly, the CPU time is very tied to the number of successes with
 respect to the naive algorithm.
 The reason is that, in our experiments, 
\begin_inset Formula $P_{grounded}\left(S\right)\cong P_{complete}\left(S\right)$
\end_inset

, therefore 
\begin_inset Formula $S$
\end_inset

 is unlikely to be complete but not grounded in any induced AAF.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename grounded_absolute_01.png
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Absolute time and number of trials
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename grounded_relative_01.png
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Time, trials and successes percentage
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Grounded01"

\end_inset

Run time comparison for the grounded semantics with 
\begin_inset Formula $\epsilon=0.01$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename grounded_absolute_005.png
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Absolute time and number of trials
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename grounded_relative_005.png
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Time, trials and successes percentage
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Grounded005"

\end_inset

Run time comparison for the grounded semantics with 
\begin_inset Formula $\epsilon=0.005$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As we have seen the new algorithm, based on the novel concept that the probabili
ty of a set of arguments being conflict-free is computable in polynomial
 time, is generally faster than the naive algorithm.
 In particular, under the assumption that for the complete semantics the
 CPU time is strictly related to the number of iterations, it follows that
 the new algorithm is at least 
\begin_inset Formula $1-P_{CF}\left(S\right)$
\end_inset

 faster compared to the naive algorithm.
\end_layout

\begin_layout Section
Conclusions and future work
\end_layout

\begin_layout Standard
We have described abstract argumentation frameworks and probabilistic argumentat
ion frameworks.
 An existing approach based on Monte Carlo simulation to computing the probabili
ty of a set of arguments being consistent according to some semantics has
 been evaluated.
\end_layout

\begin_layout Standard
We have shown that the probability of a set of arguments being conflict-free
 and admissible in PrAFs can be computed in polynomial time with respect
 to the number of arguments and defeats.
 Then we have proposed a new algorithm that extends the naive Monte Carlo
 simulation to take advantage of the novel concept that the probability
 of a set being conflict-free is computable in polynomial time.
 Finally, we have shown that the new algorithm is generally more efficient
 compared to the naive algorithm, and is especially efficient in the case
 of complete semantics.
\end_layout

\begin_layout Standard
This work can be extended to the case of admissibility, whereas the probability
 of a set of arguments being admissible is also computable in polynomial
 time.
 In this case, the problem of sampling the space of admissible AAFs that
 can be induced from a PrAF is not as trivial as that of conflict-free AAFs.
\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "summary"
options "bibtotoc,plain"

\end_inset


\end_layout

\end_body
\end_document
